
# Use the latest CUDA base image with Ubuntu
FROM nvidia/cuda:12.4.0-cudnn8-runtime-ubuntu20.04

# Set environment variables for non-interactive installations
ENV DEBIAN_FRONTEND=noninteractive

# Install necessary Ubuntu packages
RUN apt-get update && apt-get install -y \ 
    git \ 
    wget \ 
    bzip2 \ 
    ca-certificates \ 
    libglib2.0-0 \ 
    libxext6 \ 
    libsm6 \ 
    libxrender1 \ 
    gcc \ 
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Miniconda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \ 
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \ 
    rm ~/miniconda.sh

# Set path to conda
ENV PATH="/opt/conda/bin:$PATH"

# Create conda environment and install PyTorch and other dependencies
RUN conda create -n detr_env python=3.8 -y && \ 
    /bin/bash -c "source activate detr_env" && \ 
    conda install -n detr_env -c pytorch pytorch=1.5 torchvision=0.6 cudatoolkit=12.4 -y && \ 
    conda install -n detr_env cython scipy -y && \ 
    pip install -U 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI' && \ 
    pip install 'git+https://github.com/cocodataset/panopticapi.git'

# Set working directory in container
WORKDIR /workspace/detr

# Copy the DETR repository into the container
COPY . /workspace/detr/

# Specify the entrypoint for the Docker container
ENTRYPOINT ["conda", "run", "-n", "detr_env", "python", "main.py", "--batch_size", "2", "--no_aux_loss", "--eval", "--resume", "https://dl.fbaipublicfiles.com/detr/detr-r50-e632da11.pth", "--coco_path", "/path/to/coco"]

# Optional: Expose any ports if necessary
# EXPOSE <port_number>
